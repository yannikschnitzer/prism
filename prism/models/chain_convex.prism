mdp
const double p; // < 0.2
const double q; // < 0.2

module chain

	s : [0..4] init 0;
	
    [a] s = 0 -> 0.5 : (s'=min(s+1,10)) + 0.5 : (s'=0);
	[b] s = 0 -> p : (s'=min(s+1,10)) + 1-p : (s'=0);
	[c] s = 0 -> q : (s'=min(s+1,10)) + 1-q : (s'=0);

    [a] s = 1 -> 0.5 : (s'=min(s+1,10)) + 0.5 : (s'=0);
	[b] s = 1 -> 2 * p : (s'=min(s+1,10)) + 1 - 2 * p : (s'=0);
	[c] s = 1 -> 1 - 2 * q : (s'=min(s+1,10)) + 2 * q : (s'=0);

    [a] s = 2 -> 0.5 : (s'=min(s+1,10)) + 0.5 : (s'=0);
	[b] s = 2 -> 3 * p : (s'=min(s+1,10)) + 1 - 3 * p : (s'=0);
	[c] s = 2 -> 1 - 3 * q : (s'=min(s+1,10)) + 3 * q : (s'=0);

    [a] s = 3 -> 0.5 : (s'=min(s+1,10)) + 0.5 : (s'=0);
	[b] s = 3 -> 3 * p : (s'=min(s+1,10)) + 1 - 3 * p : (s'=0);
	[c] s = 3 -> 1 - 3 * q : (s'=min(s+1,10)) + 3 * q : (s'=0);

    [a] s = 4 -> 0.5 : (s'=min(s+1,10)) + 0.5 : (s'=0);
	[b] s = 4 -> 4 * p : (s'=min(s+1,10)) + 1 - 4 * p : (s'=0);
	[c] s = 4 -> 1 - 4 * q : (s'=min(s+1,10)) + 4 * q : (s'=0);

    [a] s = 5 -> 0.5 : (s'=min(s+1,10)) + 0.5 : (s'=0);
	[b] s = 5 -> 5 * p : (s'=min(s+1,10)) + 1 - 5 * p : (s'=0);
	[c] s = 5 -> 1 - 5 * q : (s'=min(s+1,10)) + 5 * q : (s'=0);


endmodule

rewards
	[a] true : 1;
	[b] true : 1;
	[c] true : 1;
endrewards

label "goal" = s=5;
