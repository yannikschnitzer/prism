pomdp

observables
start
endobservables

const int N=4;
const int axMAX = N-1;
const int ayMAX = N-1;
const int axMIN = 0;
const int ayMIN = 0;
const double slippery = 0.1;
const int ob1x = axMAX;
const int ob1y = ayMIN;

formula done = start & ax = axMAX & ay = ayMAX;
observable "amdone" = done;
formula crash =  (ax = ob1x & ay = ob1y)  ;
observable "hascrash" = crash;


module master
    start : bool init false;

    [placement] !start -> (start'=true);
    [north] start & !done -> true;
    [south] start  & !done -> true;
    [east] start  & !done-> true;
    [west] start & !done -> true;


endmodule


module robot
    ax : [axMIN..axMAX] init 0;
    ay : [ayMIN..ayMAX] init 0;
    slipped : bool init false;

    //[placement] true ->  1/4: (ax'=ob1x-1) & (ay'=ob1y) + 1/4: (ax'=1) & (ay'=1) + 1/4: (ax'=2) & (ay'=1) + 1/4: (ax'=1) & (ay'=3);
    [placement] true ->  1/2: (ax'=0) & (ay'=0) + 1/2: (ax'=0) & (ay'=ayMAX);
    [west] true -> (1-slippery): (ax'=max(ax-1,axMIN)) + slippery: (ax'=max(ax-2,axMIN));
    [east] true -> (1-slippery): (ax'=min(ax+1,axMAX)) + slippery: (ax'=min(ax+2,axMAX));
    [south]  true -> (1-slippery): (ay'=min(ay+1,ayMAX)) + slippery: (ay'=min(ay+2,ayMAX));
    [north]  true -> (1-slippery): (ay'=max(ay-1,ayMIN)) + slippery: (ay'=max(ay-2,ayMIN));
endmodule


label "goal" = done;
label "traps" = crash;
label "notbad" =  !crash;


// mapping to abstract POMDP
label "s1" = ax=1 & ay=1;
label "s2" = done;