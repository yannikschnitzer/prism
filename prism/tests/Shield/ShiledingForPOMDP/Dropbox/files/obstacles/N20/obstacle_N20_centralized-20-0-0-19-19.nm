pomdp
observables
start
endobservables
const int N = 20;
const int axMAX = N-1;
const int ayMAX = N-1;
const int axMIN = 0;
const int ayMIN = 0;
const int primaryMinX = axMIN;
const int primaryMinY = ayMIN;
const int primaryMaxX = axMAX;
const int primaryMaxY = ayMAX;
const int borderSize = 2;
const int areaMinX = max(primaryMinX - borderSize, axMIN);
const int areaMinY = max(primaryMinY - borderSize, ayMIN);
const int areaMaxX = min(primaryMaxX + borderSize, axMAX);
const int areaMaxY = min(primaryMaxY + borderSize, ayMAX);
const double slippery = 0.1;
const int ob0x = 2;
const int ob0y = 6;
const int ob1x = 3;
const int ob1y = 4;
const int ob2x = 3;
const int ob2y = 10;
const int ob3x = 4;
const int ob3y = 8;
const int ob4x = 4;
const int ob4y = 13;
const int ob5x = 6;
const int ob5y = 3;
const int ob6x = 6;
const int ob6y = 10;
const int ob7x = 6;
const int ob7y = 18;
const int ob8x = 7;
const int ob8y = 1;
const int ob9x = 8;
const int ob9y = 9;
const int ob10x = 8;
const int ob10y = 17;
const int ob11x = 9;
const int ob11y = 8;
const int ob12x = 10;
const int ob12y = 10;
const int ob13x = 10;
const int ob13y = 15;
const int ob14x = 12;
const int ob14y = 2;
const int ob15x = 13;
const int ob15y = 2;
const int ob16x = 13;
const int ob16y = 6;
const int ob17x = 16;
const int ob17y = 15;
const int ob18x = 18;
const int ob18y = 5;
const int ob19x = 18;
const int ob19y = 14;
formula crash = start & ((ax = ob0x & ay = ob0y)|(ax = ob1x & ay = ob1y)|(ax = ob2x & ay = ob2y)|(ax = ob3x & ay = ob3y)|(ax = ob4x & ay = ob4y)|(ax = ob5x & ay = ob5y)|(ax = ob6x & ay = ob6y)|(ax = ob7x & ay = ob7y)|(ax = ob8x & ay = ob8y)|(ax = ob9x & ay = ob9y)|(ax = ob10x & ay = ob10y)|(ax = ob11x & ay = ob11y)|(ax = ob12x & ay = ob12y)|(ax = ob13x & ay = ob13y)|(ax = ob14x & ay = ob14y)|(ax = ob15x & ay = ob15y)|(ax = ob16x & ay = ob16y)|(ax = ob17x & ay = ob17y)|(ax = ob18x & ay = ob18y)|(ax = ob19x & ay = ob19y));
formula done = start & ax = axMAX &  ay = ayMAX ;
observable "amdone" = done;
observable "hascrash" = crash;
module master
start : bool init false;
[placement] !start -> (start'=true);
[north] start & !done -> true;
[south] start  & !done -> true;
[east] start  & !done-> true;
[west] start & !done -> true;
endmodule
module robot
ax : [axMIN..axMAX] init axMIN;
ay : [ayMIN..ayMAX] init ayMIN;
//slipped : bool init false;
[placement] true -> 1/5:(ax'=0) & (ay'=19) + 1/5:(ax'=3) & (ay'=0) + 1/5:(ax'=4) & (ay'=10) + 1/5:(ax'=7) & (ay'=15) + 1/5:(ax'=8) & (ay'=13) ;
[west] true -> (1-slippery): (ax'=max(ax-1,areaMinX)) + slippery: (ax'=max(ax-2,areaMinX));
[east] true -> (1-slippery): (ax'=min(ax+1,areaMaxX)) + slippery: (ax'=min(ax+2,areaMaxX));
[south]  true -> (1-slippery): (ay'=min(ay+1,areaMaxY)) + slippery: (ay'=min(ay+2,areaMaxY));
[north]  true -> (1-slippery): (ay'=max(ay-1,areaMinY)) + slippery: (ay'=max(ay-2,areaMinY));
endmodule
label "goal" = done;
label "traps" = crash;
label "notbad" =  !crash;
rewards "cost"
[north] true : 1;
[south] true : 1;
[west] true : 1;
[east] true : 1;
crash: 5;
endrewards
rewards "reward"
done : 20;
endrewards
