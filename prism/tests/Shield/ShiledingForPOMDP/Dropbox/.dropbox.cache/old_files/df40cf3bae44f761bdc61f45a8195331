{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "92c938c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "from rock_utility import *\n",
    "import rock_utility"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4f9fe92a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'constants', 'cost', 'cost_2', 'formula_bad', 'formula_dist', 'formula_finish', 'formula_good', 'formula_maxdist', 'formula_normdist', 'formula_observable', 'generate_rock_file', 'generate_rocks', 'grid', 'in_bound', 'labels', 'master', 'move', 'observable_at', 'observable_finish', 'observable_good_bad', 'observable_near', 'one_rock', 'plot_board', 'preamble', 'primary_grid', 'reward', 'reward_cost', 'robot', 'rock_positions', 'rocks', 'sys']\n"
     ]
    }
   ],
   "source": [
    "# generate_rock_file(N, R, is_main, lx, ly, rx, ry, file = sys.stdout):\n",
    "N = 8; R = 3\n",
    "shieldSize = 4\n",
    "shieldSizeX = 4\n",
    "shieldSizeY = 4   \n",
    "for lx in range(0, xMAX, shieldSizeX):\n",
    "  for ly in range(0, yMAX, shieldSizeY):\n",
    "    rx, ry = lx + shieldSizeX - 1, ly + shieldSizeY - 1\n",
    "    file_name = \"rocks_N{}R_factored{}-{}-{}-{}-{}-{}\".format(N, R, shieldSize, lx, ly, rx, ry)\n",
    "    file =\n",
    "    generate_file(N, R, False, lx, ly, rx, ry, file_name)\n",
    "    f.close()\n",
    "\n",
    "\n",
    "print(dir(rock_utility))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
