mdp
const int N=310; // N*N grid map
const double p=0.1; // with probability p, a move to a neighboring state state occurs due to seeing and control noise

module robot
	//define robot position
	r:[1..N] init 1; //grid row
	c:[1..N] init 1; //grid column

	// go to the terminal state when hitting an obstacle
	[obstacle] (r=226 & c=26) | (r=246 & c=37) | (r=222 & c=10) | (r=104 & c=124) | (r=87 & c=77) | (r=113 & c=10) | (r=116 & c=65) | (r=228 & c=109) | (r=124 & c=239) | (r=116 & c=111) | (r=237 & c=151) | (r=221 & c=45)-> (r'=310) & (c'=1);

	// transitions
	[east] (c<N | c=N) & !((r=226 & c=26) | (r=246 & c=37) | (r=222 & c=10) | (r=104 & c=124) | (r=87 & c=77) | (r=113 & c=10) | (r=116 & c=65) | (r=228 & c=109) | (r=124 & c=239) | (r=116 & c=111) | (r=237 & c=151) | (r=221 & c=45))-> p/3:(r'=min(r+1, N))+ p/3: (c'=max(c-1, 1))+ p/3: (r'=max(r-1, 1)) + (1-p): (c'=min(c+1, N));
	[south] (r<N | r=N) & !((r=226 & c=26) | (r=246 & c=37) | (r=222 & c=10) | (r=104 & c=124) | (r=87 & c=77) | (r=113 & c=10) | (r=116 & c=65) | (r=228 & c=109) | (r=124 & c=239) | (r=116 & c=111) | (r=237 & c=151) | (r=221 & c=45))-> (1-p):(r'=min(r+1, N)) + p/3: (c'=min(c+1, N)) + p/3:(r'=min(r+1, N))+ p/3: (c'=max(c-1, 1));
	[west]  (c>1 | c=1) & !((r=226 & c=26) | (r=246 & c=37) | (r=222 & c=10) | (r=104 & c=124) | (r=87 & c=77) | (r=113 & c=10) | (r=116 & c=65) | (r=228 & c=109) | (r=124 & c=239) | (r=116 & c=111) | (r=237 & c=151) | (r=221 & c=45))-> p/3:(r'=max(r-1, 1))+ p/3:(r'=min(r+1, N))+ p/3: (c'=min(c+1, N)) + (1-p): (c'=max(c-1, 1));
	[north] (r=1 | r>1) & !((r=226 & c=26) | (r=246 & c=37) | (r=222 & c=10) | (r=104 & c=124) | (r=87 & c=77) | (r=113 & c=10) | (r=116 & c=65) | (r=228 & c=109) | (r=124 & c=239) | (r=116 & c=111) | (r=237 & c=151) | (r=221 & c=45))-> (1-p):(r'=max(r-1, 1)) + p/3: (c'=max(c-1, 1)) + p/3: (c'=min(c+1, N)) + p/3:(r'=min(r+1, N));

	// terminal state self-loop to avoid deadlock
	[] r=310 & c=1 -> true;
endmodule

label "goal" = r=310 & c=1;

rewards
	[east] true : 1;
	[south] true : 1;
	[west] true : 1;
	[north] true : 1;
	[obstacle] true : 60.0;
endrewards
